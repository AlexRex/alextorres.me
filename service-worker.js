!function(){"use strict";const e=["service-worker-index.html","CNAME","bachelor_thesis.pdf","favicon.ico","global.css"];console.log(e);const t=["client/[slug].41105c06.js","client/index.f861c5a0.js","client/index.3f9de392.js","client/bio.3d53e677.js","client/client.b0a8715f.js"].concat(e).filter(e=>!e.includes("pdf")).filter(e=>!e.includes("CNAME")),s=new Set(t);self.addEventListener("install",e=>{e.waitUntil(caches.open("cache1590171932019").then(e=>e.addAll(t)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1590171932019"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&s.has(t.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1590171932019").then(async t=>{try{const s=await fetch(e.request);return t.put(e.request,s.clone()),s}catch(s){const c=await t.match(e.request);if(c)return c;throw s}}))))})}();
